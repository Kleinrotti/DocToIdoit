# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: create release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set version env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Set current release version
      run: sed -i 's#<Version>0.0.0</Version>#<Version>${{ env.RELEASE_VERSION }}</Version>#' src/DocToIdoit/DocToIdoit.csproj
    
    - name: Restore dependencies
      run: dotnet restore src/DocToIdoit/DocToIdoit.csproj
    
    - name: Build Windows-x64
      run: dotnet publish src/DocToIdoit/DocToIdoit.csproj -p:PublishProfile=Windows-X64
    - name: zip windows files
      run: |
        cd src/DocToIdoit/bin/publish-win
        zip -r DocToIdoit-win-x64-${{ env.RELEASE_VERSION }}.zip *
    - uses: actions/upload-artifact@v3
      with:
        path: src/DocToIdoit/bin/publish-win/DocToIdoit-win-x64-${{ env.RELEASE_VERSION }}.zip
        name: DocToIdoit-win-x64-${{ env.RELEASE_VERSION }}.zip
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}      
      
    - name: Build and push docker image
      uses: docker/build-push-action@v3
      with:
        context: ./src
        file: ./src/DocToIdoit/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/doctoidoit:latest,${{ secrets.DOCKER_HUB_USERNAME }}/doctoidoit:{{ env.RELEASE_VERSION }}
          
    
    - name: Build Linux-x64
      run: dotnet publish src/DocToIdoit/DocToIdoit.csproj -p:PublishProfile=Linux-X64
    - name: zip linux files
      run: |
        cd src/DocToIdoit/bin/publish-linux
        zip -r DocToIdoit-linux-x64-${{ env.RELEASE_VERSION }}.zip *
    - uses: actions/upload-artifact@v3
      with:
        path: src/DocToIdoit/bin/publish-linux/DocToIdoit-linux-x64-${{ env.RELEASE_VERSION }}.zip
        name: DocToIdoit-linux-x64-${{ env.RELEASE_VERSION }}.zip
  
  release-github:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set version env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v3
      
      - name: Release files
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            DocToIdoit-win-x64-${{ env.RELEASE_VERSION }}.zip
            DocToIdoit-linux-x64-${{ env.RELEASE_VERSION }}.zip
